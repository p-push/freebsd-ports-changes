Storm is an object-relational mapper (ORM) for Python developed at Canonical.

Design

    * Clean and lightweight API offers a short learning curve and long-term maintainability.
    * Storm is developed in a test-driven manner. An untested line of code is considered a bug.
    * Storm needs no special class constructors, nor imperative base classes.
    * Storm is well designed (different classes have very clear boundaries, with small and clean public APIs).
    * Designed from day one to work both with thin relational databases, such as SQLite, and big iron systems like PostgreSQL and MySQL.
    * Storm is easy to debug, since its code is written with a KISS principle, and thus is easy to understand.
    * Designed from day one to work both at the low end, with trivial small databases, and the high end, with applications accessing billion row tables and committing to multiple database backends.
    * It's very easy to write and support backends for Storm (current backends have around 100 lines of code). 

Features

    * Storm is fast.
    * Storm lets you efficiently access and update large datasets by allowing you to formulate complex queries spanning multiple tables using Python.
    * Storm allows you to fallback to SQL if needed (or if you just prefer), allowing you to mix "old school" code and ORM code
    * Storm handles composed primary keys with ease (no need for surrogate keys).
    * Storm doesn't do schema management, and as a result you're free to manage the schema as wanted, and creating classes that work with Storm is clean and simple.
    * Storm works very well connecting to several databases and using the same Python types (or different ones) with all of them.
    * Storm can handle obj.attr = <A SQL expression> assignments, when that's really needed (the expression is executed at INSERT/UPDATE time).
    * Storm handles relationships between objects even before they were added to a database.
    * Storm works well with existing database schemas.
    * Storm will flush changes to the database automatically when needed, so that queries made affect recently modified objects. 

WWW: https://storm.canonical.com/
